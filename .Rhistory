![My Profile Photo](images/sokka.jpeg){fig-align="center" width="300"}
![My Profile Photo](images/sokka.jpeg)
![My Profile Photo]
![My Profile Photo](images/sokka.jpeg)
---
title: "Welcome to My Analytics Lab"
---
title: "Welcome to My Analytics Lab - Onur"
title: "Welcome to My Analytics Lab - Onur"
---
title: "Welcome to My Analytics Lab - Onur"
---
title: "Welcome to My Analytics Lab"
URLs <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250",
"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
data_html <- read_html(URLs)
library(tidyverse) # for everything :)
library(rvest) # for HTML scraping
library(stringr) # for string processing
data_html <- read_html(URLs)
URLs <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250",
"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
data_html <- read_html(URLs)
data_html <- read_html(URLs[1])
tab <- data_html |> html_nodes("table")
View(data_html)
print(data_html)
print(tab)
data <- html_text(tab)
print(data)
print(data)
data_html <- read_html(URLs[1])
tab <- data_html |> html_nodes("table")
tab <- tab[[1]] |> html_table()
data_html <- read_html(URLs[1])
tab <- data_html |> html_nodes("table")
tab <- tab[[1]] |> html_table()
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
print(title_names)
title_names <- tail(head(title_names,-1),-1)
print(title_names)
title_names <- str_split(title_names, " ", n=2)
print(title_names)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
print(title_names)
data_html <- read_html(URLs)
years <- data_html |> html_nodes(class="sc-300a8231-7 eaXxft dli-title-metadata-item")
years <- data_html |> html_nodes("sc-300a8231-7 eaXxft dli-title-metadata-item")
years <- html_text(years)
years
years <- data_html |> html_nodes("sc-300a8231-7 eaXxft dli-title-metadata-item")
View(data_html)
View(years)
years <- data_html |> html_nodes("sc-300a8231-7")
years <- html_text(years)
years
years <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
years <- html_text(years)
head(years)
years <- data_html |> html_nodes(".year-child(1)") |> html_text()
years <- data_html |> html_nodes(".year-child(1)") |> html_text()
years <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
years <- html_text(years)
head(years)
print(years)
yearsAndDurationData <- matrix(yearsAndDuration, ncol = 3, byrow = TRUE)
yearsAndDuration <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
yearsAndDuration <- html_text(years)
yearsAndDurationData <- matrix(yearsAndDuration, ncol = 3, byrow = TRUE)
yearsAndDurationData <- matrix(yearsAndDuration, ncol = 3, byrow = TRUE)
yearsAndDurationData2 <- data.frame(
Year = yearsAndDurationData[, 1],
Duration = yearsAndDurationData[, 2]
)
View(yearsAndDurationData)
yearsAndDuration <- html_text(years)
yearsAndDuration <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
yearsAndDuration <- html_text(years)
yearsAndDuration <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
yearsAndDuration <- html_text(years)
rm(yearsAndDurationData2)
rm(yearsAndDurationData)
rm(yearsAndDuration)
rm(tab)
rm(data)
rm(years)
yearsAndDuration <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
yearsAndDuration <- html_text(years)
yearsAndDuration <- html_text(yearsAndDuration)
yearsAndDurationData <- matrix(yearsAndDuration, ncol = 3, byrow = TRUE)
yearsAndDuration <- yearsAndDuration[yearsAndDuration %% 3 != 0]
yearsAndDuration <- data_html |> html_nodes(".sc-300a8231-7.eaXxft.dli-title-metadata-item")
yearsAndDuration <- html_text(yearsAndDuration)
yearsAndDuration <- yearsAndDuration[yearsAndDuration %% 3 != 0]
URLS <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,&num_votes=2500,&country_of_origin=TR&count=250","https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
data_html <- read_html(URLS[1])
library(tidyverse) # for everything :)
library(rvest) # for HTML scraping
library(stringr) # for string processing
data_html <- read_html(URLS[1])
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
title_names
years <- data_html |> html_nodes('.sc-300a8231-7')
years <- html_text(years)
years
years_cleaned <- years[-seq(3,lenght(years),by = 3)]
years_cleaned <- years[-seq(3,lenght(years),by = 3)]
years_cleaned <- years[-seq(3, length(years), by = 3)]
Year <- years_cleaned[seq(1, length(years_cleaned), by = 2)]
Duration <- years_cleaned[seq(2, length(years_cleaned), by = 2)]
years_cleaned
years
URLS <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250","https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
data_html <- read_html(URLS[1])
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
years <- data_html |> html_nodes('.sc-300a8231-7')
years <- html_text(years)
years
years_cleaned <- years[-seq(3, length(years), by = 3)]
years_cleaned
years <- data_html |> html_nodes('.sc-300a8231-7')
years <- html_text(years[1])
years
years <- html_text(years[1,])
years <- html_text(years[,1])
rm(years_cleaned)
rm(Year)
rm(Duration)
years <- data_html |> html_nodes('.sc-300a8231-7:nth-child(1)') |> html_text()
years
durations <- data_html |> html_nodes('.sc-300a8231-7:nth-child(2)') |> html_text()
durations
durations_in_minutes <- sapply(durations, function(x) {
# Saat kısmını yakala
hours <- as.numeric(gsub("h.*", "", x))
# Dakika kısmını yakala
minutes <- as.numeric(gsub(".*h |m", "", x))
# Toplam dakikayı hesapla
total_minutes <- hours * 60 + minutes
return(total_minutes)
})
durations_in_minutes
durations_in_minutes
view(durations_in_minutes)
print(durations_in_minutes)
durations_in_minutes <- sapply(durations, function(x) {
# Saat kısmını yakala
hours <- as.numeric(gsub("h.*", "", x))
# Dakika kısmını yakala
minutes <- as.numeric(gsub(".*h |m", "", x))
# Toplam dakikayı hesapla
total_minutes <- hours * 60 + minutes
return(total_minutes)
})
durations_in_minutes
durations <- durations %>%
mutate(minutes = sapply(time, function(x) {
# Zamanı ayırıyoruz
time_parts <- strsplit(x, "h|m")[[1]]
# Saatleri dakikaya çevirip, dakikaları ekliyoruz
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
}))
durations <- data_html |> html_nodes('.sc-300a8231-7:nth-child(2)') |> html_text()
durations
minutes <- sapply(durations, function(x) {
# Saat ve dakikayı ayırıyoruz
time_parts <- strsplit(x, "h|m")[[1]]
# Saat kısmını dakikaya çevirip, dakikaları ekliyoruz
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
})
minutes
durations <- sapply(durations, function(x) {
time_parts <- strsplit(x, "h|m")[[1]]
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
})
durations
rm(minutes)
ratings <- data_html |> html_nodes('.ipc-rating-star--rating') |> html_text()
ratings
ratings <- data_html |> html_nodes('.ipc-rating-star--voteCount:nth-child(2)') |> html_text()
ratings
ratings <- data_html |> html_nodes('.ipc-rating-star--rating') |> html_text()
votes <- data_html %>%
html_nodes(".ipc-rating-star--voteCount") %>%
html_text()
votes
votes <- gsub("\\(|\\)| ", "", votes)
votes
votes <- trimws(votes)
votes
votes <- trimws(votes)
votes
ratings
# Define URLs
URLS <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250",
"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
# Empty lists to store data
titles, years, durations, ratings, votes <- list(), list(), list(), list(), list()
# Define URLs
URLS <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250",
"https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
# Empty lists to store data
titles <- list()
years <- list()
durations <- list()
ratings <- list()
votes <- list()
# Loop through each URL
for (url in URLS) {
# Read the HTML content
data_html <- read_html(url)
# Extract titles
titles[[length(titles) + 1]] <- tail(head(html_text(html_nodes(data_html, '.ipc-title__text')), -1), -1) %>%
str_split(., " ", n = 2) %>%
unlist(lapply(., function(x) x[2]))
# Extract years
years[[length(years) + 1]] <- html_text(html_nodes(data_html, '.sc-300a8231-7:nth-child(1)'))
# Extract durations
durations[[length(durations) + 1]] <- sapply(html_text(html_nodes(data_html, '.sc-300a8231-7:nth-child(2)')), function(x) {
time_parts <- strsplit(x, "h|m")[[1]]
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
})
# Extract ratings
ratings[[length(ratings) + 1]] <- html_text(html_nodes(data_html, '.ipc-rating-star--rating'))
# Extract votes
votes[[length(votes) + 1]] <- gsub("\\(|\\)| ", "", html_text(html_nodes(data_html, ".ipc-rating-star--voteCount")))
}
# Combine data into a data frame
imdb_data <- data.frame(
URL = URLS,
Title = unlist(titles),
Year = unlist(years),
Duration = unlist(durations),
Rating = unlist(ratings),
Votes = unlist(votes)
)
# Print the data frame
print(imdb_data)
View(imdb_data)
library(tidyverse) # for everything :)
library(rvest) # for HTML scraping
library(stringr) # for string processing
URLS <- c("https://m.imdb.com/search/title/?title_type=feature&release_date=2010-01-01,2023-12-31&num_votes=2500,&country_of_origin=TR&count=250","https://m.imdb.com/search/title/?title_type=feature&release_date=,2009-12-31&num_votes=2500,&country_of_origin=TR&count=250")
data_html <- read_html(URLS[1])
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
years <- data_html |> html_nodes('.sc-300a8231-7:nth-child(1)') |> html_text()
durations <- data_html |> html_nodes('.sc-300a8231-7:nth-child(2)') |> html_text()
durations <- sapply(durations, function(x) {
time_parts <- strsplit(x, "h|m")[[1]]
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
ratings <- data_html |> html_nodes('.ipc-rating-star--rating') |> html_text()
#extract votes
votes <- data_html %>% html_nodes(".ipc-rating-star--voteCount") %>% html_text()
votes <- gsub("\\(|\\)| ", "", votes)
movies_data <- data.frame(
Title = title_names,
Year = years,
Duration = durations,
Rating = ratings,
Votes = votes,
stringsAsFactors = FALSE
)
movies_data
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
title_names
title_names
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
votes <- data_html %>% html_nodes(".ipc-rating-star--voteCount") %>% html_text()
votes <- gsub("\\(|\\)| ", "", votes)
votes
movies_data <- data.frame(
Title = title_names,
Year = years,
Duration = durations,
Rating = ratings,
Votes = votes,
stringsAsFactors = FALSE
)
#extract votes
votes <- data_html %>% html_nodes(".ipc-rating-star--voteCount") %>% html_text()
votes <- gsub("\\(|\\)| ", "", votes)
# extract titles (movie names)
title_names <- data_html |> html_nodes('.ipc-title__text')
title_names <- html_text(title_names)
title_names <- tail(head(title_names,-1),-1)
title_names <- str_split(title_names, " ", n=2)
title_names <- unlist(lapply(title_names, function(x) {x[2]}))
# extract years
years <- data_html |> html_nodes('.sc-300a8231-7:nth-child(1)') |> html_text()
# extract durations
durations <- data_html |> html_nodes('.sc-300a8231-7:nth-child(2)') |> html_text()
durations <- sapply(durations, function(x) {
time_parts <- strsplit(x, "h|m")[[1]]
as.numeric(time_parts[1]) * 60 + as.numeric(time_parts[2])
})
#extract rating
ratings <- data_html |> html_nodes('.ipc-rating-star--rating') |> html_text()
votes <- data_html %>% html_nodes(".ipc-rating-star--voteCount") %>% html_text()
votes <- gsub("\\(|\\)| ", "", votes)
